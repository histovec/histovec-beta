upstream elasticsearch {
  server <ES_HOST>:<ES_PORT>;
}

upstream backend {
  server <BACKEND_HOST>:<BACKEND_PORT>;
}

upstream frontend-dev {
  server <FRONTEND_DEV_HOST>:<FRONTEND_DEV_PORT>;
}

server {
  listen 80 default_server;
  include tor-ip.conf;
  include aws-ip.conf;

  # frontend (dev, npm server)
  location / {
    try_files $uri @rew;
  }

  location @rew {
    return 302 $scheme://$http_host/<APP>/;
  }

  location ~ (__webpack_hmr|sockjs-node|app.js|^/static|.*hot-update.(js|json)) {
  	proxy_pass http://frontend-dev;
      # Allow protocol upgrade to websocket
      proxy_http_version 1.1;
      proxy_next_upstream off;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  }

  location /<APP> {
        proxy_pass http://frontend-dev;
  }

  location /<APP>/assets/images {
    alias /usr/share/nginx/html/assets/images;
  }

  location ~ "^/<APP>/api/v1/id/[a-f0-9-]{36}/([A-Za-z0-9_-]{43}=)$" {
    #valid_referers histovec.interieur.gouv.fr localhost beta.datalab.mi histovec.fr;
    #if ($invalid_referer) {
    #    return 403;
    #man}
    if ($request_method != GET) {
       return 405;
    }
    rewrite "^/.*/id/[a-f0-9-]{36}/([A-Za-z0-9_-]{43}=)$" /<ES_INDEX>/_search?q="$1"&size=1&terminate_after=1&filter_path=hits.hits._source.v break;
    # rewrite "^/.*/id/.*/([A-Za-z0-9_-]{43}=)$" /<ES_INDEX>/_search?q="$1"&size=1&terminate_after=1&filter_path=hits.hits._source.v break;
    proxy_pass http://elasticsearch;
    proxy_redirect off;
    proxy_hide_header Content-Type;
    proxy_set_body '{"_source": "v"}';
    proxy_set_header content-type "application/json";
    proxy_method POST;
    proxy_buffering off;
    proxy_http_version 1.1;
    # sub_filter_types '*';
    # sub_filter '{}' '';
  }

  location ~ "^/<APP>/api/v1/log/exit" {
    if ($request_method != POST) {
       return 405;
    }
    default_type application/json;
    return 200 '{"status":"ok"}';
  }

  location ~ "^/<APP>/api/v1/log/.*" {
    if ($request_method != PUT) {
       return 405;
    }
    default_type application/json;
    return 200 '{"status":"ok"}';
  }

  location ~ ^/<APP>/api/v1/id/.* {
    return 400;
  }

  location ~ (^/<APP>/api/v1/(contact|feedback)/) {
    if ($request_method != POST) {
       return 405;
    }
    rewrite "^/.*/(contact|feedback)/$" /$1/_doc break;
    proxy_pass http://elasticsearch;
    proxy_redirect off;
    proxy_hide_header Content-Type;
    proxy_set_header content-type "application/json";
    proxy_buffering off;
    proxy_http_version 1.1;
  }

  location ~ "^/<APP>/api/v1/(siv|utac|contact|feedback)" {
    if ($request_method != POST) {
       return 405;
    }
    proxy_pass http://backend;
    proxy_http_version 1.1;
    proxy_next_upstream off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }



}

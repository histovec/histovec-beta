version: '3.4'

services:
  backend:
    image: ${APP}-backend-${EXEC_ENV}:${APP_VERSION}
    build:
      context: ${BACKEND}
      target: ${EXEC_ENV}
      dockerfile: Dockerfile
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        npm_registry: ${NPM_REGISTRY}
        MIRROR_DEBIAN: ${MIRROR_DEBIAN}
        app_path: /${APP}
        app_name: ${APP}
        app_ver: ${APP_VERSION}
        file_app_version: ${FILE_BACKEND_APP_VERSION}
        file_dist_app_version: ${FILE_BACKEND_DIST_APP_VERSION}
        port: ${BACKEND_PORT}
        NPM_FIX: ${NPM_FIX}
        NPM_LATEST: ${NPM_LATEST}
        NPM_VERBOSE: ${NPM_VERBOSE}
    container_name: ${APP}-backend-${EXEC_ENV}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      - NODE_ENV=${EXEC_ENV}
      - BACKEND_NAME=${BACKEND_NAME}
      - BACKEND_PORT=${BACKEND_PORT}
      - APP=${APP}
      - APP_VERSION=${APP_VERSION}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PERSIST=${REDIS_PERSIST}
      - ES_URL=${ES_URL}
      - ES_INDEX=${ES_INDEX}
      - IS_UTAC_API_ACTIVATED=${IS_UTAC_API_ACTIVATED}
      - IS_UTAC_MOCK_FOR_BPSA_ACTIVATED=${IS_UTAC_MOCK_FOR_BPSA_ACTIVATED}
      - IS_VIN_SENT_TO_UTAC=${IS_VIN_SENT_TO_UTAC}
      - FAKE_UTAC_URL=${FAKE_UTAC_SCHEME}://${FAKE_UTAC_HOST}:${FAKE_UTAC_PORT}/${FAKE_UTAC_API}
      - FORCE_UTAC_HEALTHCHECK=${FORCE_UTAC_HEALTHCHECK}
      - UTAC_ID_KEY=${UTAC_ID_KEY}
      - UTAC_URL=${UTAC_URL}
      - UTAC_TIMEOUT=${UTAC_TIMEOUT}
      - UTAC_USERNAME=${UTAC_USERNAME}
      - UTAC_PASSWORD=${UTAC_PASSWORD}
      - HISTOVEC_PFX=${HISTOVEC_PFX}
      - HISTOVEC_PFX_PASSPHRASE=${HISTOVEC_PFX_PASSPHRASE}
      - INES_TOKEN=${INES_TOKEN}
      - UTAC_PEM=${UTAC_PEM}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_TO=${MAIL_TO}
      - PUBLIC_BACKEND=false
      - IS_UTAC_CACHE_IGNORABLE=${IS_UTAC_CACHE_IGNORABLE}
    volumes:
      - ${BACKEND}/src:/${APP}/src/
      - ${BACKEND}/dist:/${APP}/dist/
      - /${APP}/node_modules
    restart: on-failure
    links:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/${APP}/api/v1/health"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 40s

  redis:
    image: redis:6-alpine
    container_name: ${APP}-cache
    ports:
      - 6379:6379
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    volumes:
      - ${REDIS}/redis.conf:/usr/local/etc/redis/redis.conf
      - ${REDIS_DATA}:/data
    sysctls:
      - net.core.somaxconn=100000
    ulimits:
      nofile:
        soft: 100000
        hard: 100000

networks:
  default:
    external:
      name: ${APP}
